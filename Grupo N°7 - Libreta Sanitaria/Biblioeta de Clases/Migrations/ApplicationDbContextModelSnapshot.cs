// <auto-generated />
using System;
using Biblioeta_de_Clases.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Biblioeta_de_Clases.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Biblioeta_de_Clases.Models.HistorialMedico", b =>
                {
                    b.Property<int>("Id_HistorialMedico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_HistorialMedico"));

                    b.Property<int>("Id_Mascota")
                        .HasColumnType("int");

                    b.HasKey("Id_HistorialMedico");

                    b.HasIndex("Id_Mascota")
                        .IsUnique();

                    b.ToTable("HistorialesMedicos");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.Mascota", b =>
                {
                    b.Property<int>("Id_Mascota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Mascota"));

                    b.Property<string>("Especie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDuenio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Peso")
                        .HasColumnType("real");

                    b.Property<string>("Raza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Mascota");

                    b.ToTable("Mascotas");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.Vacuna", b =>
                {
                    b.Property<int>("Id_Vacuna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Vacuna"));

                    b.Property<string>("Dosis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("HistorialId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Vacuna");

                    b.HasIndex("HistorialId");

                    b.ToTable("Vacunas");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.HistorialMedico", b =>
                {
                    b.HasOne("Biblioeta_de_Clases.Models.Mascota", "Mascota")
                        .WithOne("HistorialMedico")
                        .HasForeignKey("Biblioeta_de_Clases.Models.HistorialMedico", "Id_Mascota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mascota");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.Vacuna", b =>
                {
                    b.HasOne("Biblioeta_de_Clases.Models.HistorialMedico", "HistorialMedico")
                        .WithMany("Vacunas")
                        .HasForeignKey("HistorialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistorialMedico");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.HistorialMedico", b =>
                {
                    b.Navigation("Vacunas");
                });

            modelBuilder.Entity("Biblioeta_de_Clases.Models.Mascota", b =>
                {
                    b.Navigation("HistorialMedico")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
